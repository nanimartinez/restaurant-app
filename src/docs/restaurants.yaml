paths:
  /api/restaurants:
    get:
      summary: Obtener todos los restaurantes
      tags:
        - Restaurants
      responses:
        "200":
          description: Lista de todos los restaurantes
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Restaurant'
        "500":
          description: Error interno del servidor

    post:
      summary: Crear un nuevo restaurante
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRestaurant'
      responses:
        "201":
          description: Restaurante creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRestaurant'
        "400":
          description: Valores incompletos o incorrectos
        "500":
          description: Error interno del servidor

  /api/restaurants/{rid}:
    parameters:
      - in: path
        name: rid
        required: true
        schema:
          type: string
        description: ID del restaurante a gestionar

    get:
      summary: Obtener un restaurante por su ID
      tags:
        - Restaurants
      responses:
        "200":
          description: Detalles del restaurante
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRestaurant'
        "404":
          description: Restaurante no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar un restaurante existente
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRestaurant'
      responses:
        "200":
          description: Restaurante actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRestaurant'
        "404":
          description: Restaurante no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Eliminar un restaurante
      tags:
        - Restaurants
      responses:
        "200":
          description: Restaurante eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Restaurant deleted
        "404":
          description: Restaurante no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:
    Restaurant:
      type: object
      properties:
        _id:
          type: string
          example: "648f1b3b1e8a9d1b2c3d4e5f"
        name:
          type: string
          example: "La Pizzería del Sabor"
        address:
          type: string
          example: "Calle Falsa 123, Ciudad"
        phone:
          type: string
          example: "+1234567890"
        menu:
          type: array
          description: "Array de IDs de los platillos del menú"
          items:
            type: string
            example: "648f1c1c1e8a9d1b2c3d4e6a"

    NewRestaurant:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "El Rincón del Taco"
        address:
          type: string
          example: "Avenida Siempre Viva 742"
        phone:
          type: string
          example: "+0987654321"

    ResponseRestaurant:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          $ref: '#/components/schemas/Restaurant'